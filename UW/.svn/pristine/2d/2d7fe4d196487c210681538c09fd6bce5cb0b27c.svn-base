(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     59819,       1304]
NotebookOptionsPosition[     58406,       1252]
NotebookOutlinePosition[     58749,       1267]
CellTagsIndexPosition[     58706,       1264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "-", " ", "\[Lambda]"}], ",", " ", "0", ",", " ", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"\[Lambda]", "*", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ",", 
       RowBox[{"\[Lambda]", "*", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", "0"}], " ", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"\[Lambda]", "*", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"\[Lambda]", "*", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", " ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5167561655625*^9, 3.516756241165039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", " ", "-", " ", "\[Lambda]"}], ",", " ", "0", ",", " ", 
       "0", ",", " ", 
       RowBox[{"\[Lambda]", "*", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"\[Lambda]", "*", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ",", " ", "0", ",", 
       " ", "0"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Lambda]", "*", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", " ", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "*", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", "0", ",", " ", "0",
        ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vals", " ", "=", " ", 
  RowBox[{"Eigenvalues", "[", "M", "]"}]}]}], "Input",
 CellChangeTimes->{{3.5167497401591797`*^9, 3.5167498497441406`*^9}, {
   3.5167499139697266`*^9, 3.5167499260322266`*^9}, {3.5167503041484375`*^9, 
   3.516750304395508*^9}, 3.516750442354492*^9, {3.5167562468134766`*^9, 
   3.5167562499970703`*^9}, {3.5167566414570312`*^9, 3.5167566427353516`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "\[Lambda]"}], "-", 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "\[Lambda]"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "\[Lambda]"}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"2", "-", 
         RowBox[{"4", " ", "\[Lambda]"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}]}], ",", 
   RowBox[{"\[Lambda]", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.516755712895508*^9, 3.5167562533583984`*^9, 
  3.5167566441689453`*^9, 3.516756760100586*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Theta]A_", ",", " ", "\[Theta]B_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]", "*", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["Pi", "2"], "-", "\[Theta]A"}], "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["Pi", "2"], "-", "\[Theta]B"}], "]"}], "2"]}], "+", " ", 
    RowBox[{"2", "*", "\[Lambda]", "*", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
     RowBox[{"Cos", "[", "\[Theta]A", "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["Pi", "2"], "-", "\[Theta]A"}], "]"}], "*", 
     RowBox[{"Cos", "[", "\[Theta]B", "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{
       FractionBox["Pi", "2"], "-", "\[Theta]B"}], "]"}]}], " ", "+", " ", 
    RowBox[{"\[Lambda]", "*", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]A", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]B", "]"}], "2"]}], "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["Pi", "2"], "-", "\[Theta]A"}], "]"}], "2"], "*", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]B", "]"}], "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.516754323754883*^9, 3.516754490091797*^9}, {
  3.516756490020508*^9, 3.51675651284375*^9}, {3.5167567087539062`*^9, 
  3.5167567210410156`*^9}, {3.5167589297998047`*^9, 3.5167589468945312`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Theta]A_", ",", " ", "\[Theta]B_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]", "*", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]A", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]B", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]A", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]B", "]"}]}], " ", "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]A", "]"}], 
        RowBox[{"Cos", "[", "\[Theta]B", "]"}]}], " ", "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]A", "]"}], 
        RowBox[{"Cos", "[", "\[Theta]B", "]"}]}]}], ")"}]}], "+", "  ", 
    RowBox[{
     RowBox[{"+", " ", "\[Lambda]"}], "*", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]A", "]"}], 
        RowBox[{"Cos", "[", "\[Theta]B", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]A", "]"}], 
        RowBox[{"Cos", "[", "\[Theta]B", "]"}]}], " ", "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]A", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]B", "]"}]}], " ", "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]A", "]"}], 
        RowBox[{"Sin", "[", "\[Theta]B", "]"}]}]}], ")"}]}], "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]A", "]"}], "*", 
     RowBox[{"Cos", "[", "\[Theta]B", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5167623142314453`*^9, 3.5167624668583984`*^9}, {
  3.5167625646816406`*^9, 3.516762637232422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lval", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"Pi", "/", "8"}]}], "]"}], " ", "+", " ", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], ",", 
        RowBox[{"Pi", "/", "8"}]}], "]"}], " ", "+", " ", 
      RowBox[{"f", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"3", 
         RowBox[{"Pi", "/", "4"}]}]}], "]"}], " ", "-", " ", 
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], ",", 
        RowBox[{"3", 
         RowBox[{"Pi", "/", "4"}]}]}], "]"}], " ", "-", " ", 
      RowBox[{"f", "[", 
       RowBox[{"0", ",", "0"}], "]"}], " ", "-", " ", 
      RowBox[{"f", "[", 
       RowBox[{"0", ",", 
        FractionBox["Pi", "2"]}], "]"}], "-", 
      RowBox[{"f", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"Pi", "/", "8"}]}], "]"}], " ", "-", " ", 
      RowBox[{"f", "[", 
       RowBox[{
        FractionBox["Pi", "2"], ",", " ", 
        RowBox[{"Pi", "/", "8"}]}], "]"}]}], " ", "\[Equal]", "0"}], ",", " ",
     "\[Lambda]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5167544926875*^9, 3.5167547271123047`*^9}, {
   3.516754815623047*^9, 3.5167548157910156`*^9}, {3.516755450263672*^9, 
   3.5167556503408203`*^9}, {3.5167556909648438`*^9, 
   3.5167556938046875`*^9}, {3.5167563810117188`*^9, 3.516756415051758*^9}, 
   3.516756536203125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "8"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5167589525859375`*^9, {3.5167624731435547`*^9, 3.5167624816464844`*^9}, 
   3.5167626576621094`*^9, 3.5167626968251953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"A1", ",", "B1"}], "]"}], " ", "+", " ", 
        RowBox[{"f", "[", 
         RowBox[{"A2", ",", "B1"}], "]"}], " ", "+", " ", 
        RowBox[{"f", "[", 
         RowBox[{"A3", ",", "B1"}], "]"}], "+", 
        RowBox[{"f", "[", 
         RowBox[{"A1", ",", "B2"}], "]"}], "+", 
        RowBox[{"f", "[", 
         RowBox[{"A2", ",", "B2"}], "]"}], "+", 
        RowBox[{"f", "[", 
         RowBox[{"A1", ",", "B3"}], "]"}], " ", "-", " ", 
        RowBox[{"f", "[", 
         RowBox[{"A3", ",", "B2"}], "]"}], " ", "-", " ", 
        RowBox[{"f", "[", 
         RowBox[{"A1", ",", "0"}], "]"}], "-", 
        RowBox[{"f", "[", 
         RowBox[{"A1", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], " ", "-", 
        RowBox[{"2", 
         RowBox[{"f", "[", 
          RowBox[{"0", ",", "B1"}], "]"}]}], " ", "-", " ", 
        RowBox[{"2", 
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], ",", "B1"}], "]"}]}], " ", "-", " ", 
        RowBox[{"f", "[", 
         RowBox[{"0", ",", "B2"}], "]"}], " ", "-", " ", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], ",", "B2"}], "]"}]}], " ", "/.", " ", 
       "lval"}], " ", "/.", 
      RowBox[{"\[Theta]", "\[Rule]", 
       RowBox[{"Pi", "/", "16"}]}]}], "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A1", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}], ",", 
       RowBox[{"A2", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"A3", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"B1", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"B2", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"B3", "\[Rule]", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"Pi", "/", "2"}], "]"}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5167581847558594`*^9, 3.5167583231171875`*^9}, {
  3.51675843146875*^9, 3.5167584315791016`*^9}, {3.516758571515625*^9, 
  3.5167586219785156`*^9}, {3.516758659185547*^9, 3.516758668633789*^9}}],

Cell[BoxData["2.2471694543161687`"], "Output",
 CellChangeTimes->{{3.516758410489258*^9, 3.5167584333740234`*^9}, 
   3.5167586315429688`*^9, 3.516758678265625*^9, 3.5167589617734375`*^9, 
   3.5167624937666016`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", "/.", "lval"}], "/.", 
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{"Pi", "/", "8"}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.5167627213652344`*^9, 3.516762745373047*^9}, {
  3.516762883828125*^9, 3.516762893828125*^9}}],

Cell[BoxData[
 RowBox[{"{", "0.20808954141937538`", "}"}]], "Output",
 CellChangeTimes->{{3.5167627339814453`*^9, 3.5167627539697266`*^9}, {
  3.5167628887089844`*^9, 3.5167628948427734`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", "/.", "lval"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["Pi", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5167576883125*^9, 3.5167577018378906`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBWIQzbyf69xj00S7x9Napq9ddMr+avwk9bmT6u0fQflB
OZK3Zkzqh/MnforZPG3SfPuHUL71US8up+INcPmCKr/EzQU74PzcHal9TMoH
7GHmX3nhybk86Qhcvkv/G8O2yBNw+ULtE1MPLD0DN/9Xcva6u3kX4OqT9oYF
TEi7BFef/PHKgQMdV+D8HoPt+cvarsHVMx3Ybt5SdQPOF9TyPnd/xi24eo/5
Tos/TLoD54u/P+NWv/0e3P5Zx3cxMmc+gOu3kXX8r5DyEC6v/UDgSW3JI7j+
tSuEMrYWPYarr7kXe1m77QnCfzYW3vOmPIXL/5rvkvR6wjM4/0LBrITyRc/h
5lu6K/27u/AFXP6kq+UKhzkv4eYt3TjT8tHqV3B5UWWdrLiVr+H8S4wcTZJ7
3sDVb+UoXnbh5Fu4+TqiAllJR9/B1b/v+yZifO09XL1ye7t+ftYHOP9R1O1b
Ts8/wNV7PL38c2veRzi/oig1Q+ztR7h6v22zvcTKPsH57/5k1TB/Q/AXXm/c
klf8GREeGbYJlb8RfNm/E6MLq77A3fvMvfsUB8tXOP+w2hl7ue6vcPOyOJax
KHJ+g/O3L1CxPTzxG9y8c9Y2R4MEv8Plf2TNDk7o+w6XPxEwP5RX7AcivVna
LF8+BcH32lVUGXgbwTe0Xun9W/En3DwAWBLctA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.208089541419375},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0.20808954141937533`, 
     0.20808954141937538`}}, {{0, 1.5707963267948966`}, {0.20808954141937533`,
      0.20808954141937538`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5167577027070312`*^9, 3.5167589664101562`*^9, 3.516762497314453*^9, {
   3.5167626850009766`*^9, 3.51676269896875*^9}, 3.516762760897461*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vecs", " ", "=", " ", 
  RowBox[{"Eigenvectors", "[", "M", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.516750306692383*^9, 3.516750313546875*^9}, {
   3.516750346810547*^9, 3.5167503864345703`*^9}, 3.516756648767578*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "\[Lambda]"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"2", "-", 
             RowBox[{"4", " ", "\[Lambda]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "-", 
             RowBox[{
              SuperscriptBox["\[Lambda]", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Theta]", "]"}]}], 
       RowBox[{"4", " ", "\[Lambda]"}]]}], ",", "0", ",", "0", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "\[Lambda]"}], "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"2", "-", 
             RowBox[{"4", " ", "\[Lambda]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "-", 
             RowBox[{
              SuperscriptBox["\[Lambda]", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Theta]", "]"}]}], 
       RowBox[{"4", " ", "\[Lambda]"}]]}], ",", "0", ",", "0", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.516750315041992*^9, {3.516750352661133*^9, 3.5167503871152344`*^9}, 
   3.516755731149414*^9, 3.5167562651035156`*^9, 3.516756523745117*^9, 
   3.516756650123047*^9, 3.516756729958008*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.516750785453125*^9, 3.516750804220703*^9}, {
  3.5167508421660156`*^9, 3.5167508559726562`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{"M", ".", 
    RowBox[{"Outer", "[", 
     RowBox[{"Times", ",", " ", 
      RowBox[{"vecs", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"vecs", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5167509127558594`*^9, 3.5167509942910156`*^9}, {
  3.5167557517783203`*^9, 3.516755752145508*^9}, {3.5167568008945312`*^9, 
  3.51675680340625*^9}, {3.5167609374208984`*^9, 3.5167609524121094`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "\[Lambda]"}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"2", "-", 
        RowBox[{"4", " ", "\[Lambda]"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Lambda]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "\[Lambda]"}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"2", "-", 
          RowBox[{"4", " ", "\[Lambda]"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "\[Theta]"}], "]"}]}]}]]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sec", "[", "\[Theta]", "]"}], "2"]}], 
   RowBox[{"16", " ", 
    SuperscriptBox["\[Lambda]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.5167507743320312`*^9, 3.516750804875*^9}, 
   3.5167508482695312`*^9, {3.5167509132509766`*^9, 3.5167509403554688`*^9}, {
   3.5167509722177734`*^9, 3.516750994986328*^9}, {3.5167557336484375`*^9, 
   3.5167557526445312`*^9}, 3.5167562677714844`*^9, {3.5167565258408203`*^9, 
   3.5167565399248047`*^9}, 3.5167567316904297`*^9, 3.516756803948242*^9, {
   3.516760938225586*^9, 3.51676095325*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"vals", "/.", "lval"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", " ", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5167566190371094`*^9, 3.5167566303515625`*^9}, {
  3.5167566702714844`*^9, 3.516756673006836*^9}, {3.516760989923828*^9, 
  3.516761088298828*^9}, {3.51676291384375*^9, 3.5167629152597656`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
/xf+B2+p/sA=
     "]], LineBox[CompressedData["
1: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
nK0=
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {-0.013441714129506621`, 
     0.8053521727101314}}, {{0, 1.5707963267948966`}, {-0.013441714129506621`,
      0.8053521727101314}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.516756630895508*^9, 3.5167566739140625`*^9}, 
   3.516756773510742*^9, {3.516761001076172*^9, 3.51676104684375*^9}, 
   3.5167610887304688`*^9, {3.516762902620117*^9, 3.5167629159833984`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{"M", ".", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", " ", 
           RowBox[{"vecs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"vecs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], " ", "/.", " ", 
       "lval"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5167499286210938`*^9, 3.5167499658945312`*^9}, {
   3.516750210883789*^9, 3.5167502200283203`*^9}, {3.5167505450566406`*^9, 
   3.516750556944336*^9}, {3.516750594095703*^9, 3.516750618607422*^9}, {
   3.5167507080390625`*^9, 3.516750746908203*^9}, 3.5167508591572266`*^9, {
   3.5167508900527344`*^9, 3.5167509010839844`*^9}, {3.5167509659160156`*^9, 
   3.5167509819316406`*^9}, {3.5167510163398438`*^9, 
   3.5167510329228516`*^9}, {3.5167510661708984`*^9, 3.516751071138672*^9}, {
   3.516751262368164*^9, 3.5167513625351562`*^9}, {3.5167556204853516`*^9, 
   3.5167556225478516`*^9}, {3.5167556565966797`*^9, 
   3.5167556569433594`*^9}, {3.5167560279521484`*^9, 
   3.5167560298867188`*^9}, {3.5167562919726562`*^9, 3.516756297708008*^9}, {
   3.516756552458008*^9, 3.5167565537773438`*^9}, {3.5167568081503906`*^9, 
   3.5167568112539062`*^9}, {3.5167580533916016`*^9, 3.516758057151367*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/3/hf9y+4vg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {-0.01366606278697828, 0.}}, {{
     0, 1.5707963267948966`}, {-0.01366606278697828, 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.516751263533203*^9, 3.5167512708378906`*^9}, {
   3.516751345470703*^9, 3.516751363439453*^9}, 3.5167556232597656`*^9, 
   3.5167556578359375`*^9, 3.5167557007382812`*^9, 3.516755735810547*^9, 
   3.5167560327246094`*^9, {3.5167562728789062`*^9, 3.5167562987910156`*^9}, {
   3.516756542640625*^9, 3.516756556004883*^9}, 3.5167567795615234`*^9, 
   3.5167568141240234`*^9, 3.516758058104492*^9, 3.5167617728652344`*^9, 
   3.516762926001953*^9}]
}, Open  ]]
},
WindowSize->{607, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"7.0 for Microsoft Windows (64-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 1178, 30, 99, "Input"],
Cell[CellGroupData[{
Cell[1748, 54, 1544, 36, 120, "Input"],
Cell[3295, 92, 1420, 42, 83, "Output"]
}, Open  ]],
Cell[4730, 137, 1776, 46, 121, "Input"],
Cell[6509, 185, 1786, 47, 132, "Input"],
Cell[CellGroupData[{
Cell[8320, 236, 1458, 39, 121, "Input"],
Cell[9781, 277, 1874, 54, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11692, 336, 2546, 66, 172, "Input"],
Cell[14241, 404, 216, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14494, 412, 299, 7, 31, "Input"],
Cell[14796, 421, 192, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15025, 429, 278, 7, 47, "Input"],
Cell[15306, 438, 1373, 29, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16716, 472, 246, 4, 31, "Input"],
Cell[16965, 478, 2090, 58, 179, "Output"]
}, Open  ]],
Cell[19070, 539, 145, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[19240, 545, 528, 12, 31, "Input"],
Cell[19771, 559, 1800, 49, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21608, 613, 436, 9, 31, "Input"],
Cell[22047, 624, 25635, 430, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47719, 1059, 1637, 34, 52, "Input"],
Cell[49359, 1095, 9031, 154, 224, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
